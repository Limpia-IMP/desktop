<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnVoltar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACIAAAAbCAYAAAAZMl2nAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA85JREFUSEvFVt9Lk1EY3uY2l9tcm1sDW7l+qDl/FCjeJl0FUReRXVcEQdDfYBF0
        EeGFYRQlWhLWKOvWWyG86UJBwwsRRFD8gXP+QAR1Pc/53vMx9VOnpj3w8J5z3nPO93zved/zfbaDIJPJ
        PCWl+38gIjTYtotrX8C6OHhPU4Zzgn19ff0ZFmUjlU6nQ7D7FrO2tnbf2MKADO8JO+ZmR4JIjY+P18Pn
        Ah1qVm6gaAeEPJB9FAzX7tgWCfTTvb29V+ErBD2gk/PAXOBoaGhwLi8vP5TtFMS3IyxFJJPJ6/AV+/3+
        onA47EfbDdeeQjiHItD0zM/PP1IbCowZFoDPUkR7e/tNuEvBEjAKFtbW1vJ4comIXeZ6JycnH8u2Cobb
        AlYi2trabsFVkZ+fr4VEQB+YqxBHIpFwwxaOjY09ka0VDPdmWFVHZmVl5c/09HT31NTUj9nZ2e8IbXJp
        aalrdXW1E4n3EVM6hO27sANzP2Gvz+Av9E3Is01YijgOyPNttqamJkdjY2MelD4X37FCZKjzzQPdkUjE
        NzMz81L8JlKp1O+JiYmfOJruubm5JI7mKy6zL4uLi120W6nHaTXZ51oc7Tfuw/30nkoFYGc0YE+AITA2
        OjraIhoUcLYLzc3Nd+GrAJmsF8A4WOLxeJi4tOyrsR3sOSQ615WD1eBlt9tdjbEytI1S1WUFshK4qGpw
        cPCdIcMAxbS0tNyBL4ENKOjSAViBtVVgDdpkJXgeVODR8KLx+nw+UwhY19/f/0F0KFBMa2vrbfj0xny7
        TcQbbrJbyDUJsBJiEphzEe0zoBERGGc8Hud1HQRjYLnL5boCWz8wMPDekGGAd0pnZ+cNfSRk1vGYY9LX
        R2N1hGfBYjAMKlAIP1wuJisso1JCxRQD1g0NDb0VHQobGxvzPT091zCvCORGRbjytTXbuq/94lN9kC8d
        APlMAyxfGFU5/H5kHRFDWUNBw8PDb0SHAsX09fUxVwpAJrq2irFYTDF7TI/Tygnkg7xtN8EsY5Bf1gjC
        yPCVITo806qRkZHXoiOzsLDwAj6PJDrX5bH6pAK3UY9n+fnyDgnCNmgxVMovqxbDklWVwtLGR+tVIBBg
        aBmFnX4DrMb2BZ0zphhQi+FRse6ZeKdAn3zIDv1QSyDy+pLjQ5Bf/jAjg3JjzZcy871ebzQYDDLZKNgy
        vP8SSoz8ALESToOse1r21Y8ReDQRyYKKDMMfjUZ5854EVfmFQiEmdIH8dR25EIIPYWRYHSw5JijJNqNB
        37HBrn8V0HZKFNh2MJ844bjBh5qECI4dEjbbX8s2p8DGSTEjAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="imgPerfil.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAEmFJREFUaEPlWwl4lNW5DklIyE4RFAQkokWL1dJ6qUCIJCHLZA+CKERZat2FBGYm
        Gy6BLJNlQoSC3IdacalwC1bFHRciELKi+LRqb/u0pnqVqshOllnf+37nn4Esk5CILH16eL5nJjP/f873
        nm97v/MPXudylDXm/qyiwZhV1qDfVNZgqClrMLaUNxiO8D3cIn+bGg37+d1LZY2G6rJmQ7r5Q/041xQX
        9yjcnz20osk4QwB2BzZQUZvADbgowQvQ8kbDY2cLsg+pKW/UL3Qtd+HGeQDaTfQtFwy4xOb5A9pd9JvO
        m6uLVbkoE5AnRc6fmNRmG7Ncap2bUcWsK27lSYELJfSyapd6P+yQ2LlwLty3SEYXz3OpevZDwHpa6OIS
        fcsPEtf/HmA1OWtLazHrefKLWGpc6g9smOqzw7skqHoRI8rrjKgQ2ZuD0oblTBrLUVG/nN8tR0njcn6W
        w2tyeU2Oukeu6aTMgMRUL2vIHHo1f3n9MoqsQXHpUybrdLvveyUy3til9CiQSjihC6CJi8pn5r2yAVyc
        f1fXLoO5bhnLBjeAipY08vNO8wxETASkATZwLqOSctc6xY0GrGwW8Ty/UFwXlDMPjfB3naCICxQ3caLG
        HFTuNeDx2lyseSsXKzbeifwn5qN08/3YUPMIqvjdqqalePSDpVRKT2vndZnnTGKq11NZWpavxY15qKrN
        x4a381H621+hYPVcFD69mH/nYd3OPG50Hq/TLCz3dZ1L39KveO7hyi5Z1ZhF19Vj3Q4Dch+ZhfgpYxAx
        bBAiA7wQHTgIM4K8obsyDJkLJqP6zWxuTpZyRXPtwAGr97TimhcMuHX2DYgMH4KpIVwjzEetFXOpL1Jm
        jENWxa3c/IdRspce1QNwP12bYKWVO32TuBUnE7DmP9yDpIjRiAn1QrL/YCQE+EEXMBg6vk8K8kdSoB8S
        Awcj9sbhWP3yA3RtuddI99Yr8Myip1yU6yihUlxD5udnEp/MA+V8v2LzQsRPCEMsAab4DUJ6gD/iKbFB
        vlxzEHTBXpgW4oXM1OtQ8UY2SulZomeJeJXM5dK/z1KlWVcWpnJKkVy6VC7Km/NRtl2P2EmXIoUWTR0y
        CAmBvgTnTZCDTgsVSQrwRSytMTt2AtbT7R5rWoYSxpqALZN4p8Wr9ubSHXNU3JuoaFlDLiobCxTYVc1Z
        DBU9Eq8bgfggLyQEca1O0mU9io6SFjEe1e8UMASWo6gpm3N3sXbvWdttXQErLlVB64hy63YWQBcxBtG0
        bCzBzuTuJtCFuy+ezM1I96f1A70QcZkvHi2aDfPz9yGvMB0LF9yE25InIiNiLDImjcSc60ci4+ejMCti
        HG5PvB6ZmVORXzIba7cuhSEvFZFhBMM1zgQ4gRL1Ix/My/wvrN6bj8o6zcqdAHu28inrUkzMhu5sXMlJ
        Vq7OVG6cTrA6LhoV5kXrckGxaKfFkwhYPkvhdUm0ftzwAMa5D6YH+SAjfBTujZiM/FtSsXJRJkz334XH
        FsyHMT0Fd0+bgrnjw5kH/PHLsMGIHhlEL9I8KI7zyeb2BjhePuO604d7oeTZe2HeY2SC7VYKGz3EcmdG
        JbXUrFyNdY8uPS/lp2ri1CHetCItTJdNpBXlfefF5TNdqA9iGNeJoy5H8eLF2PH7TTj01edw2i1wOmyw
        UawOK2xOGxw2K2C1ARY77G3tONTyBbZv3IgVc+cgeUggcwQBEXRfFha9Erkhydzk+5ckoKKhgHp3tbB0
        Vj0yNr84XXcl6FnQJVFVMPUnThzOibnjAT5I8fdW1hVwcUEERoVShtDilCi+v+3GSXhxwxNoP3wYdgLr
        IDBCgt3phMMBguYf8ur6zEaxUAid3zt5j4OfWfDNgc+w/b8fR9qPxyKKa8cTUCLB6RjXSri+6CAeFRNM
        8P4+SIu6inG8AlV061NYXNKlLnd2Z5Fy3lCs6i1r3M7lSBgXxol9euxuXJAfP2cs0/IzwwLwrKkIxw8d
        ga3DSmBOBUrk+w6HvR2HD7TA9MCvoRseSpDM0JLIVA7RAMtmi8cl0asSbhiNkqaHGcee2J1+kwtuzwZB
        ykgZ6WElrbyWMZE4cShSuFh3wKliWVr1lqvGYv+O1+HoaKPrOmCnmzpptbMF7LTRA+xWWCwn8OazT+Hm
        4GC6ruZRUi0EsACP5QZIeM2Lvhql1Fvp3wmPhslwxAW3Z+2VLCflSKhd1Z5s3D7npypj9gDMRXSjRuCD
        d96icoxLKunyWA3o2SK2Q83ZwUlsHe1457nfY2ZQAHR+dF96lgCW0hUfTEIy1Bv63GSU1dIrpQR2wuOW
        U9maf3ThzSW8Ye2uPFJE2ZmlKNv8AGLJcroDjgkZjK1rqmhVmxajDFCJRTfwswXMqNA2UGLdZoG1oxVV
        D96DuOAAEh8tjyQGk+HR6lOvDoZpezZMtcLvuwJ1i3iyAtz9JEPqsBADsbSJKd5MPvzQAzdjJhcQqyb7
        eZNc+CPtup/AcfI4k42WmMSJRUEaRrPyAAHLPQwG/uNsksXlL746nXaCtjOZ2XH4q39i5qhhKm+kEXQ6
        Qy02zB8rym8ncclTzUw1pTMet8gJq1e1dijn8YLOsnpXDvJXJGPKVQGKZSUN8cPvSkupVwety1KjlBWQ
        yiYadHmv/u7HkCQnXiKA5R47d0p27JTwGr46bTYY59xC6/oiisnqpp8EI7fqNtbfPBQ161VjU1XrGbBK
        XNqTAk9fdpWVnMxcz0bglWwsip4IXUgg/v6nj1hGLOhg+bHSrrSDspBdlHa9StkRIDLcr56GhINdLMl7
        lCurEqXhtvO9uLWIvK974UVm6iHIvjMSJTuWo7CejQo90USiJDxaenZPGORxTr8BC/kXrmqie9+eMBGL
        Z0yBta1VKcgIht3eAYeV1qaWTosT7QePwtFOy9vkOwKRItzHaHN0oNXK+TiPs/0knCeOKO+xWjinw452
        bkgb55CNsBw9iuiwQOjvn4nSpjxU1i8lraR1aVnVO3ejlp2kpt+ATWwkZLI1u/Ixc2ww1izN1tyQykqc
        2VqPY9crLyHnlmRkjBnJGh2A9CtHI580srX1pALd13BwYw591oJH581D/PChJBN+mHNtOArmz8VHNe/B
        YeG2WgmYZcpmb8PDpKi3RFyhXLmMSaqkPh/FlDI5half1kN/TfQt/QZsZokqIvN64jUDIgN9sP3Jp+Ds
        cOAk3fnggX+iICMF8aF+iGdcxZH4JzOLS22MCfOFOeshWtui3FPsLDEqzqviVdsyAjoOY1ICoglUyEwK
        7xXaGB/izZITgOqcHHQcOcZs7VAh9GTRI9CNDYH5XTkGEsvKqxwrSXvo+VipvMG4v9+AK8i+xMKrfnsn
        mY0fmt99F06rHUcPfo1FkdPYo/qR6Av19GVSY51kBs3wEwrojfRxV+DYgX/BQmin41vL5hpgBz7ZV4to
        9rsJwZIQWWo4X7xwZBKMZPbDMf5+KJw7H9bWdlhY89945neqSyrevsSjvr1IjVdJU/YkD1/0EEkGpkYj
        jBXMkMOC8dnHf+bCFpQ9cB90VCadfXAcu6JZY8fAkJqImaEhJP+ke6yTcWGh+GjPbsahJB1hE4ztE63q
        VZiZWPzNrc+znsohgjcbfV/MCh8HfYYOcSOCkSbdFj9LCgrEtrVrVXg07XhLdWGFm+/zqG8vUkMendeF
        R/cqBCuA9cVpmHP5MHzd8g/YLCcRf+lw9sBkXUJGyKc/3vMu7O3HUffSi4iki8eFeiNmaBA+3deANipq
        I/00Zy9F8oTxMOcaVJdkZS7YyfjX+dGd6cJJIy/BF837GLPteG/Ls4jkpiUIjXQ1Jxayro9278F0elTh
        M7/2rK9HcfHp/jxCkRPIUgLOLU5H+ogwfPWPv+HwN1+Q3/opZeLJZ28beRlOfkfXZak68OlfER8WTKsM
        wqwJ4Thx5GtamInp88+ROnoEGZIPUq8dj9bvvlXd0meffEL6GkAvYShceyUsR46SWdnR8sFHiCCzErBJ
        4uJXjMaJY8fw4a49iCTg4gEAVsRDAVY/OfB8kVuKmnKYBY0oXJ9JSw7B/t27GE/HEPGjILoblZeuhRYt
        uG0+3n9lG+6OnUZywM/Z1K/OXs4sbMFxlpOTBw/iD6WrSPj9sKW6DMe/O4D240dhIQhDeprqepJCh2DV
        gkzs2rYND0ZHIY4kQ5qU+EA/zLv+BhxnF7Vz82bEcKMLX77Ho76epLIhN90NuNrTBZ1lZZOcP7NHfi0b
        0+m+rzy5ke7YAdNdd6vDPOmRY0OZXKjcjBBR0JeZejBiLxuGb7/8guHajoLFd+HWqyfgjvFjlcXuuOZK
        pF4TjuqHc+jqrdj33g7o6D0p7H8TCC6a5CI5mBSWGVt4cxRjdnPlarRx854uXIn4ywNQ+XavNbeHmD9c
        oTUP7IoWebqgsxQRcDWJuTxViAwPQundi0gqLDj85ZeY+7NJBO2PWSwnklUTmZ1TB/sg+dIReJfJSE43
        LMzEf9//AT1gFpYxGT1XVIi85FQYMmbj/z79GO3Cx+0WPFdRhChuVgYtnU7PSfOXQ0MvNio+WJoaT9JB
        7t7ehsVTJyMj5iqsrZXa61nnrmJsUWBl9IdPCylXTxOYrbP1OswcORR//rCRoDvw+f/+BUuSkhETEKBc
        dcbwENwx+UY0vPqacmVhWVKSHMzKdlsrrc2+mT2zjUzMwZ6Xoc1X0lLppTnfG89tQuq4cYhmgxJNa08P
        8sMjCxeg7btDsDKR7X/rdfyS9T6rLE0d2nnSt6cYTx8AyOCHfT7Vr6J1VzaTWvJ99ZYliBkXhuyMZNiZ
        da1SWkgsmnbswNbHH8fuN1/F8UPfqfJhk0ZAKKHUXCvBqaaeYGn1NlZiSWROfu+0ECyZidBHq9WC1m++
        Rc3Wzdj6m9X4a91eOFtJXHhvW+tR3DFpImb/YjTM78u5d2+sqqucil/38PR4pYswYZUIm+HrOnZOhtIk
        xA4LwPoV+eiggu1UlhiESagmQWsdRPrm0O6hcS/tetUtcQ5leor0wkIpTxw5BP2cDMwYNhjFG+8kt5dz
        8/482ejkzu4hbt1neSJQoW4ljTnqgdZa7m5Olg5Rw/yx8s55+Pabf6k4VB2RxhYFhSb9Ge5rXVhZmhUV
        ky6sw9mBb1r+hqXRMZhxyWA8VJLGpsHAqiFPEz3o2kO6ubN79JmtCVgeXxYRcLFwV/69dk8+HtSzbIzw
        w8IfX42aLc+j7cQhKitxK0lIOiVx1d67JeUNFHFnC1Fa+Z7Oy9rMlpMdVMexg9hWZcKs8aMROzoYeVW3
        wsQOSY6e1tRmY+W+M7v0qezcffTFuuR8SwCbxMouoi5PCkv3LkPRlrswOyockSxHOnZKa9ks/KV2Nxzs
        kpxWqwIroD31w+7PVKir1rINHUcP4v2Xt8KUdR+iRoTi5qG+yMy4HtUvZym2V0QStJo5xcyEtYp5xZO+
        p6UX67qHXODpRklWAlo9hHZJMbsSeRheTgXMu/MYV7/Cg3NvQuS4YEyWrmfUSCyZfjMem5+JDUYD/sdc
        iR3PbsLuP25F7Ut/xK4XtuH1p5/CJlMpnjDk4VGSlkU3TUbEJcGYGsbaPj4Mdy+eglVb7mWvy1CqpQvv
        FYAE3SzeJpWjp66dpVfruscZY7kvYTxVUqre06NgQyYy75mGWYnXYM7PxyDuyhBEjPDG1FAvRLCkTA/y
        ogxCJCWWcRnHVi+VmffWlOtwvz4W5c/ci/XvLMNvmC9U4+Kav8eafcoZrOseZU1nyNi9itaLljfKAy3G
        1n6xgiSXAtbLh7F2VwHWv52D6lfpGeyrzW+wxO3Iw7qaR/k9CQSzblkdv6vLpkXZ9rmsKW48cMDGljNa
        t/PgTQP/tZ24el0B3Y4AXY9E5dFlZd0yur5kVE3kObASdTqhvRdiI/fI8+gSziU/aZBjYjkyVkDdVu6v
        NBu61t0zDS2BGQf0qzs5IBBFi2kR+T2G/BxBElyxem6rRzGlqEn78YuA7SzqGjkWJrBKurGcPApAOWOW
        B3vlfJX5+wP6VFc00CE/WxpQPMvxCq3ptqI88lCPPWg1OUmspMgPYCrVo1i5XgOinTRq1pbTR9kQ+X2I
        gJPvtUe3/QNcLieTZzPKG3P+c36Y5h7/DqAF7ICS1JmGgP7e5eocyw9m2e5D+yniwBLZORdPP2f4IYcr
        e3tkY+dTNG87xz8Q7zy0uL5g1q75QeO1v+MCWLuGdTrKtfyFG6eBnzOLXxxAPQ3y6AwBf7YZXY6OhTGV
        7DVOck198Q+xijo60g4WyM17/lc8zSvkc+2/4skJ6jkpMWp4ef0/aTFA2ue8rvYAAAAASUVORK5CYII=
</value>
  </data>
</root>