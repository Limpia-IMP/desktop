<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblAviso.Text" xml:space="preserve">
    <value>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Ah caso você esteja se perguntando sobre a imagem, só usei uma imagem aleatória pra mostrar que tá funcionando.Lorem Ipsum is simply dummy text of the printing and typesetting industry. Ah caso você esteja se perguntando sobre a imagem, só usei uma imagem aleatória pra mostrar que tá funcionando.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnVoltar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACIAAAAbCAYAAAAZMl2nAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA85JREFUSEvFVt9Lk1EY3uY2l9tcm1sDW7l+qDl/FCjeJl0FUReRXVcEQdDfYBF0
        EeGFYRQlWhLWKOvWWyG86UJBwwsRRFD8gXP+QAR1Pc/53vMx9VOnpj3w8J5z3nPO93zved/zfbaDIJPJ
        PCWl+38gIjTYtotrX8C6OHhPU4Zzgn19ff0ZFmUjlU6nQ7D7FrO2tnbf2MKADO8JO+ZmR4JIjY+P18Pn
        Ah1qVm6gaAeEPJB9FAzX7tgWCfTTvb29V+ErBD2gk/PAXOBoaGhwLi8vP5TtFMS3IyxFJJPJ6/AV+/3+
        onA47EfbDdeeQjiHItD0zM/PP1IbCowZFoDPUkR7e/tNuEvBEjAKFtbW1vJ4comIXeZ6JycnH8u2Cobb
        AlYi2trabsFVkZ+fr4VEQB+YqxBHIpFwwxaOjY09ka0VDPdmWFVHZmVl5c/09HT31NTUj9nZ2e8IbXJp
        aalrdXW1E4n3EVM6hO27sANzP2Gvz+Av9E3Is01YijgOyPNttqamJkdjY2MelD4X37FCZKjzzQPdkUjE
        NzMz81L8JlKp1O+JiYmfOJruubm5JI7mKy6zL4uLi120W6nHaTXZ51oc7Tfuw/30nkoFYGc0YE+AITA2
        OjraIhoUcLYLzc3Nd+GrAJmsF8A4WOLxeJi4tOyrsR3sOSQ615WD1eBlt9tdjbEytI1S1WUFshK4qGpw
        cPCdIcMAxbS0tNyBL4ENKOjSAViBtVVgDdpkJXgeVODR8KLx+nw+UwhY19/f/0F0KFBMa2vrbfj0xny7
        TcQbbrJbyDUJsBJiEphzEe0zoBERGGc8Hud1HQRjYLnL5boCWz8wMPDekGGAd0pnZ+cNfSRk1vGYY9LX
        R2N1hGfBYjAMKlAIP1wuJisso1JCxRQD1g0NDb0VHQobGxvzPT091zCvCORGRbjytTXbuq/94lN9kC8d
        APlMAyxfGFU5/H5kHRFDWUNBw8PDb0SHAsX09fUxVwpAJrq2irFYTDF7TI/Tygnkg7xtN8EsY5Bf1gjC
        yPCVITo806qRkZHXoiOzsLDwAj6PJDrX5bH6pAK3UY9n+fnyDgnCNmgxVMovqxbDklWVwtLGR+tVIBBg
        aBmFnX4DrMb2BZ0zphhQi+FRse6ZeKdAn3zIDv1QSyDy+pLjQ5Bf/jAjg3JjzZcy871ebzQYDDLZKNgy
        vP8SSoz8ALESToOse1r21Y8ReDQRyYKKDMMfjUZ5854EVfmFQiEmdIH8dR25EIIPYWRYHSw5JijJNqNB
        37HBrn8V0HZKFNh2MJ844bjBh5qECI4dEjbbX8s2p8DGSTEjAAAAAElFTkSuQmCC
</value>
  </data>
</root>